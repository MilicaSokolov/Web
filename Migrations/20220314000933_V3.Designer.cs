// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace WEB_Projekat.Migrations
{
    [DbContext(typeof(VodeniSportoviContext))]
    [Migration("20220314000933_V3")]
    partial class V3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IznajmljivanjeRadnici", b =>
                {
                    b.Property<int>("IznajmljivanjeID")
                        .HasColumnType("int");

                    b.Property<int>("RadniciID")
                        .HasColumnType("int");

                    b.HasKey("IznajmljivanjeID", "RadniciID");

                    b.HasIndex("RadniciID");

                    b.ToTable("IznajmljivanjeRadnici");
                });

            modelBuilder.Entity("Models.Iznajmljivanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrOsoba")
                        .HasColumnType("int");

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumDo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumOd")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LokalID")
                        .HasColumnType("int");

                    b.Property<int?>("MusterijaID")
                        .HasColumnType("int");

                    b.Property<int?>("StvarID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LokalID");

                    b.HasIndex("MusterijaID");

                    b.HasIndex("StvarID");

                    b.ToTable("Iznajmljivanje");
                });

            modelBuilder.Entity("Models.Lokal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Lokal");
                });

            modelBuilder.Entity("Models.Musterija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Jmbg")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Musterija");
                });

            modelBuilder.Entity("Models.Radnici", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Jmbg")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int?>("LokalID")
                        .HasColumnType("int");

                    b.Property<string>("Pozicija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("LokalID");

                    b.ToTable("Radnici");
                });

            modelBuilder.Entity("Models.StvariZaIznajmljivanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<int?>("LokalID")
                        .HasColumnType("int");

                    b.Property<int>("MaxBrOsoba")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("LokalID");

                    b.ToTable("StvariZaIznajmljivanje");
                });

            modelBuilder.Entity("IznajmljivanjeRadnici", b =>
                {
                    b.HasOne("Models.Iznajmljivanje", null)
                        .WithMany()
                        .HasForeignKey("IznajmljivanjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Radnici", null)
                        .WithMany()
                        .HasForeignKey("RadniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Iznajmljivanje", b =>
                {
                    b.HasOne("Models.Lokal", "Lokal")
                        .WithMany("Iznajmljivanje")
                        .HasForeignKey("LokalID");

                    b.HasOne("Models.Musterija", "Musterija")
                        .WithMany("Iznajmljivanje")
                        .HasForeignKey("MusterijaID");

                    b.HasOne("Models.StvariZaIznajmljivanje", "Stvar")
                        .WithMany("Iznajmljivanje")
                        .HasForeignKey("StvarID");

                    b.Navigation("Lokal");

                    b.Navigation("Musterija");

                    b.Navigation("Stvar");
                });

            modelBuilder.Entity("Models.Radnici", b =>
                {
                    b.HasOne("Models.Lokal", "Lokal")
                        .WithMany("Radnici")
                        .HasForeignKey("LokalID");

                    b.Navigation("Lokal");
                });

            modelBuilder.Entity("Models.StvariZaIznajmljivanje", b =>
                {
                    b.HasOne("Models.Lokal", "Lokal")
                        .WithMany("StoStvariZaIznajmljivanjelovi")
                        .HasForeignKey("LokalID");

                    b.Navigation("Lokal");
                });

            modelBuilder.Entity("Models.Lokal", b =>
                {
                    b.Navigation("Iznajmljivanje");

                    b.Navigation("Radnici");

                    b.Navigation("StoStvariZaIznajmljivanjelovi");
                });

            modelBuilder.Entity("Models.Musterija", b =>
                {
                    b.Navigation("Iznajmljivanje");
                });

            modelBuilder.Entity("Models.StvariZaIznajmljivanje", b =>
                {
                    b.Navigation("Iznajmljivanje");
                });
#pragma warning restore 612, 618
        }
    }
}
